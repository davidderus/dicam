// Code generated by go-bindata.
// sources:
// server/templates/cameras/index.html
// server/templates/cameras/show.html
// server/templates/index.html
// server/templates/layout.html
// server/templates/navbar.html
// DO NOT EDIT!

package server

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _serverTemplatesCamerasIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x8b\xbb\x30\x10\xc5\xef\x7e\x8a\x21\xf4\xf8\xb7\x69\x41\xfe\x2c\x25\x0a\xcb\xf6\xb2\xb7\x85\x85\xbd\xa7\x71\x34\x61\x35\x91\x64\x6a\x59\xc4\xef\xbe\xd4\xb6\xd6\xd6\xc2\xd2\xdb\x60\xe6\xbd\xdf\x9b\x19\xbb\x0e\x72\x2c\x8c\x45\x60\xca\x59\x42\x4b\x0c\xfa\x3e\x8a\x84\x5e\x67\x6f\xb2\x46\x2f\x83\xe0\x7a\x9d\x45\x91\xc8\x4d\x0b\xaa\x92\x21\xa4\xcc\xbb\x03\xcb\x22\x80\xae\x03\x2f\x6d\x89\xb0\xf8\xc6\x9f\x7f\xb0\x50\x83\x02\x36\x29\x2c\xbf\x0c\x1e\xb6\x92\xe4\xd1\x0d\x60\x2a\x56\xae\x8a\x43\x1d\x27\x83\xc3\xed\x13\xe9\x7d\xbd\xb3\xd2\x54\xe7\xb7\x3b\xe1\xe0\x1e\xcf\x9b\x86\x20\xa6\xb8\xf0\x97\xaf\x8a\x4c\x8b\x27\xf2\xd9\xc6\xd4\x25\x04\xaf\x52\xa6\x89\x9a\x0d\xe7\x95\x53\xb2\xd2\x2e\xd0\xa6\xeb\x46\xdd\x87\xf3\x04\x7d\xcf\xe0\x60\x72\xd2\x29\xfb\x9f\xac\x18\x68\x34\xa5\xa6\x94\x25\x2f\x2b\x76\x49\x62\xea\x32\xf6\x18\x1a\x67\x83\x69\x91\x65\x82\x9b\xba\xbc\x49\x83\x36\xbf\xf2\x05\xcf\x4d\x9b\x45\x0f\x47\x6a\xc8\x38\x3b\x99\x44\xe8\xe4\xbc\x78\x98\x24\x7b\xdf\x42\xdf\x0b\xae\x93\xd1\x05\x40\x48\xd0\x1e\x8b\x94\xf1\x53\x53\xe0\xf7\x82\x31\xef\x8e\x2c\xec\xc8\xc6\x39\x16\x72\x5f\xd1\x50\x87\x9a\x65\xc7\x23\x09\x2e\x9f\xd8\xe3\x9f\x4c\x1e\xc8\x35\x73\xf0\xf1\x2f\xf1\x23\xf7\x93\x5c\x73\xcf\xc5\x2a\x3c\x8f\x92\x9e\x66\xac\xb0\x57\x0a\x43\x98\xc0\xa4\xa7\x19\xed\xc1\x7d\x6e\xca\xb1\xb8\x36\x5f\xce\x78\xfd\xf2\x1b\x00\x00\xff\xff\xe5\xf4\x78\x44\x3e\x03\x00\x00")

func serverTemplatesCamerasIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesCamerasIndexHtml,
		"server/templates/cameras/index.html",
	)
}

func serverTemplatesCamerasIndexHtml() (*asset, error) {
	bytes, err := serverTemplatesCamerasIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/cameras/index.html", size: 830, mode: os.FileMode(420), modTime: time.Unix(1501412786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesCamerasShowHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xd1\x6e\x9b\x30\x14\x7d\xe7\x2b\xae\xfc\x4e\xdd\xaa\xd5\x54\x55\x8e\x5f\x92\x75\x42\x8a\x96\x2a\x9b\xf6\x6e\xb0\xc1\xd6\x8c\x2f\xb2\xbd\x64\x1b\xca\xbf\x4f\x40\x48\x20\x89\xda\xf1\x00\x96\xb9\xe7\x9c\xeb\x7b\x8e\xdb\x16\xa4\x2a\x8d\x53\x40\x0a\x74\x51\xb9\x48\xe0\x70\x48\x12\xa6\x1f\xf8\x52\xd4\xca\x0b\x68\x5b\x30\x4e\xaa\xdf\x70\xf7\xc3\xa8\xfd\x4a\x44\x01\x24\x5b\x75\x65\x8c\xea\x07\x9e\x24\x4c\x9a\x1d\x14\x56\x84\xb0\x20\x1e\xf7\x84\x27\x00\xd3\xbd\x02\x6d\x5a\xcb\xf4\xb9\xff\x01\x3d\x5f\x79\x26\xbb\x7b\xcb\x56\x9d\x24\xf4\x0f\x33\x75\x05\xc1\x17\x0b\xa2\x63\x6c\x5e\x28\xb5\x58\x08\xab\x31\xc4\x97\xb6\x9d\x82\x36\xdb\xef\x70\x38\x10\xd8\x1b\x19\xf5\x82\x7c\x7a\xba\x27\xa0\x95\xa9\x74\x5c\x90\xa7\xe7\x7b\x32\x8a\x9b\xba\x4a\xbd\x0a\x0d\xba\x60\x76\x8a\x70\x46\x4d\x5d\x9d\x1a\x51\x36\xa8\x89\xf8\xb4\xe9\xfe\xf0\x69\xda\x58\x51\x28\x8d\x56\x2a\x4f\xc6\x89\x98\x00\x21\x62\xd3\x28\xc9\xa8\x34\xbb\x33\x9b\x93\x03\xd9\x69\xfb\xc6\x18\x9e\x3e\x1e\x03\xd3\x8f\x3c\x73\x25\xfa\x5a\x44\x83\x2e\x30\xaa\x1f\x07\x10\x93\x76\xa4\x93\x36\xd5\xe8\xcd\x5f\x74\x51\xd8\x23\x67\x57\x10\xf9\x16\xad\x62\x54\xc6\xf3\x9e\xe4\x2c\x34\xc2\x8d\x50\x2b\x72\x65\xa1\x7f\xa7\x8d\x37\xb5\xf0\x7f\x08\xbf\x65\xf3\x76\xb3\xfe\x3c\x18\xdd\xc1\x39\xa3\x52\x4e\x85\xde\xd0\xc7\x4b\xa1\x5b\x2e\x5d\xe1\xb2\xd5\xfb\xb0\x7e\x14\x97\xa8\x35\x56\xf0\x6a\xae\x8f\x36\x83\xae\x37\x5f\x6e\x40\x97\xe8\x4a\x53\x41\xf9\x11\x7a\xb9\xf9\xfa\x9a\xcd\x09\x18\x95\x96\x27\xc3\x32\xf7\x97\x56\x9f\xec\x5a\x62\x5d\x0b\x27\x8f\x56\x25\x63\x9a\x46\xa5\xf7\x33\x2f\x40\x7b\x55\x2e\x08\x1d\x42\x17\xe8\xac\xa9\xbe\x94\x76\x81\x3b\x85\x3a\x8f\x0e\xf2\xe8\x52\x29\x5c\xa5\x7c\xbf\xcc\x2d\x16\x3f\x09\xff\x16\xb1\x61\x54\x4c\x74\x2f\x22\xfe\x7f\x5a\xc2\xc7\x2b\xb1\xf0\xab\x28\x54\x08\x73\x35\xd1\x25\x60\x26\x37\xde\x81\xe9\x2d\x18\x16\xc7\x4f\x92\x9c\xcb\xfe\x05\x00\x00\xff\xff\x53\x25\x53\x10\x7f\x04\x00\x00")

func serverTemplatesCamerasShowHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesCamerasShowHtml,
		"server/templates/cameras/show.html",
	)
}

func serverTemplatesCamerasShowHtml() (*asset, error) {
	bytes, err := serverTemplatesCamerasShowHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/cameras/show.html", size: 1151, mode: os.FileMode(420), modTime: time.Unix(1501412786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\x2b\x49\xcd\x2b\x51\x52\xa8\xad\xe5\xe2\xb2\xc9\x30\xb4\x73\xc9\x4c\x4e\xcc\xb5\xd1\xcf\x30\xb4\xe3\xe2\xaa\xae\x56\x48\xcd\x4b\x01\x49\x01\x02\x00\x00\xff\xff\x5d\x32\x14\x88\x32\x00\x00\x00")

func serverTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesIndexHtml,
		"server/templates/index.html",
	)
}

func serverTemplatesIndexHtml() (*asset, error) {
	bytes, err := serverTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/index.html", size: 50, mode: os.FileMode(420), modTime: time.Unix(1489315066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\xdb\x8f\xe2\x36\x14\xc6\xdf\xf9\x2b\x4e\x5d\xf5\xa9\x4a\xcc\x6d\x80\x32\x09\xd2\x14\x76\x29\x6d\x77\xa1\x2a\xbb\x74\xfa\x66\x9c\x43\xe2\xe0\x4b\xc6\x76\x20\x11\x9a\xff\xbd\x4a\x40\x83\xa6\xb7\xa7\xe8\x3b\xf1\x77\xac\xf3\x9d\x9f\x2f\x17\x48\xf0\x20\x34\x02\x91\xac\x36\xa5\x27\xf0\xfa\xda\x89\xbe\x59\xac\xe7\xdb\xe7\xcd\x07\xc8\xbc\x92\xb3\x4e\xd4\x7c\x40\x32\x9d\xc6\x04\x35\x69\x0a\xc8\x92\x59\x07\x20\x52\xe8\x19\xf0\x8c\x59\x87\x3e\x26\x5f\xb6\x1f\x83\x09\x69\x7f\x78\xe1\x25\xce\x16\x82\x33\x15\xd1\xab\x78\x3b\xaf\x99\xc2\x98\x9c\x04\x9e\x0b\x63\x3d\x01\x6e\xb4\x47\xed\x63\x72\x16\x89\xcf\xe2\x04\x4f\x82\x63\xd0\x8a\x6b\x33\x29\xf4\x11\x32\x8b\x87\x98\x50\xaa\x58\xc5\x13\x1d\xee\x8d\xf1\xce\x5b\x56\x34\x82\x1b\x45\xdb\xc2\x99\x79\x9e\xd1\x41\x38\x08\xc7\xd4\x95\x05\xda\x0c\xad\xa1\x6f\x67\x43\x25\x74\xc8\x9d\x23\x60\x51\xc6\xc4\xf9\x5a\xa2\xcb\x10\x3d\x01\xa1\x3d\xa6\x56\xf8\x3a\x26\x2e\x63\x83\xc9\x30\xf8\xe3\x85\xd7\x0f\xde\x97\x87\xe3\x7c\x60\x7f\x64\x93\x0f\x89\x78\xaa\x9f\x7a\x5f\xd3\xf5\xd2\x2a\x94\xfd\xe7\xef\xcf\x95\x1a\xfe\x32\x38\xae\x06\x07\x9e\x6f\x77\x72\xb1\xb3\x52\x57\xf5\x62\x94\xad\xc5\x60\xf3\x91\x00\xb7\xc6\x39\x63\x45\x2a\x74\x4c\x98\x36\xba\x56\xa6\x74\xd7\x99\xda\xbb\x41\x61\x22\x58\x4c\x1c\xb7\xd8\x26\x0b\x00\x10\x72\xa6\xd0\xb2\xc0\x67\xa5\xda\x6b\x26\x24\x5c\xa0\x0d\x63\x0a\xbd\x6e\xf7\xbb\x47\xc8\x50\xa4\x99\x9f\x42\x7f\x34\x2c\x2a\x78\x7d\x67\x0a\x0a\xc9\x38\x66\x46\x26\x68\xef\xbe\xd1\xb0\x5b\x54\x77\xe3\x70\xd2\xca\x3d\xe3\xc7\xd4\x9a\x52\x27\x01\x37\xd2\xd8\x29\x7c\x3b\xc4\x87\x64\xc4\x1f\xc1\x63\xe5\x03\x26\x45\xaa\xa7\xc0\x51\x7b\xb4\x8f\x20\x85\xc6\xe0\x5d\x8b\xf6\xee\x88\xb6\xa3\xcc\x3a\x11\xbd\x62\x11\xed\x4d\x52\x37\xa3\x5c\x2e\xe0\x51\x15\x92\x79\x04\xa2\xd9\x69\xcf\x2c\x81\xb0\x21\x0c\x20\x4a\xc4\x09\xb8\x64\xce\xc5\xa4\xd9\x3f\x13\x1a\xed\x2d\x80\x77\xbe\x1b\x1c\x77\x23\x4d\xc4\x69\xd6\x69\x23\xe4\x56\x14\x1e\x9c\xe5\x0d\x17\x2c\x67\x55\x98\x1a\x93\x4a\x64\x85\x70\x2d\x13\x4d\x8d\x4a\xb1\x77\x34\x7f\x29\xd1\xd6\xb4\x17\xf6\xfa\xe1\xf0\xa6\x5a\x1a\x72\x47\x66\x11\xbd\xb6\x9a\xfd\xb3\xeb\xff\xd2\xd6\x14\x6e\xb0\xe5\xee\x6f\x94\xe5\xee\xdf\x98\xda\xf2\x87\xd5\x6f\x62\xdf\xed\x8f\x5f\x4e\x75\xfe\xfb\xa7\xc3\x4f\xf9\xfa\x13\xfb\xf5\x78\x28\x77\x5f\xab\x3f\xab\x2f\x1b\x3d\xff\xf9\x69\x2c\xfb\x6a\xbe\xfb\xbc\x2a\x96\x3f\xa8\xe5\x7c\x31\x39\x2f\x3f\xaf\xf8\x66\x31\xde\x56\xec\xbf\x99\xba\xcf\x10\xd1\xeb\x02\x22\x7a\x7d\xbe\x97\x0b\xa0\x4e\x9a\xf4\xfe\x0a\x00\x00\xff\xff\x2e\x0c\xf9\x2f\xef\x03\x00\x00")

func serverTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesLayoutHtml,
		"server/templates/layout.html",
	)
}

func serverTemplatesLayoutHtml() (*asset, error) {
	bytes, err := serverTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/layout.html", size: 1007, mode: os.FileMode(420), modTime: time.Unix(1501412786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesNavbarHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xdb\x6a\xdb\x4c\x10\xbe\xf7\x53\xcc\xbf\x09\xe1\x2f\x44\x16\x29\xb4\x81\x46\x12\x84\xe4\xa2\x85\x5c\xf6\x05\xc6\xda\x91\xbd\x64\x3d\x2b\x76\x57\x6a\x8c\xd1\xbb\x17\x9d\xd6\x3a\x24\xa5\x37\xbd\x4a\x34\xa7\x6f\xe6\xfb\x66\xd6\xe7\x33\x48\x2a\x14\x13\x08\xc6\x7a\x87\x56\x40\xd3\x6c\x12\xc6\x1a\x72\x8d\xce\xa5\x83\x19\xfa\x3f\x91\xa4\x02\x2b\xed\x45\xb6\x01\x48\xa4\x0a\x51\xb9\x61\x8f\x8a\xc9\x76\x9e\xb9\x6f\x48\x3d\x10\xca\xe0\x07\x48\x76\x95\xf7\x86\xc1\x9f\x4a\x4a\x45\xff\x21\x16\x29\xde\xec\xf7\x9a\x20\x37\x5a\x63\xe9\x48\x0a\x90\xe8\x71\x30\xb7\xa0\xbd\x7d\x34\xa3\xdd\x93\x4f\xc5\xd5\x90\x7d\x71\xa3\x55\x18\xd1\x5b\x89\x2c\x49\xa6\xa2\x40\xed\x28\x34\x02\x90\xb8\x12\x79\x84\x76\x36\x32\xac\x4f\x22\xfb\xd9\x83\x33\xd6\x6a\x8f\x5e\x19\x4e\xe2\x36\xee\x83\x34\x95\x1b\x8e\x5a\xfe\xb2\x7f\x19\x96\xc4\x3d\x51\xe1\x1b\x17\x8c\xed\x2c\xb2\x14\x70\xb0\x54\xa4\x22\x16\xd9\xb3\xca\xf1\x98\xc4\x38\xa8\x12\x4b\x55\x67\x9b\xfe\xff\xff\xa2\x08\x9e\x8c\xd6\x94\x7b\xf0\x87\x6e\x50\xd0\x8a\x5f\xdd\x2d\x14\xc6\x1e\xdd\x2d\x20\x4b\x30\xfe\x40\x16\x5a\x79\x89\x7d\xeb\x80\x8e\x7d\xc5\x7b\x88\xa2\xb5\xd6\x23\xe7\xb0\xd2\x40\xc9\xd0\x64\x30\x86\x31\x2a\x3d\x99\x63\xcc\x65\xac\xa7\x22\x69\x95\x25\x78\x99\xec\xbb\x39\xd2\x07\xca\xfd\x9f\x57\xd6\x12\xfb\x4f\x03\x79\xed\xfc\x49\xac\xd5\xac\xd8\x98\x25\xad\x29\xa5\xf9\xc5\x13\xa8\x8e\xd7\x1e\xe8\x4a\x2c\xe3\x86\xed\x5b\xac\x62\xa8\x02\xd6\xe8\xc9\x3e\x77\x9b\x77\x40\x57\x9a\xb2\x2a\x53\xe1\x6d\xf5\xe1\x3a\x3e\xe1\x91\x2c\xba\xf9\x4c\x39\x5a\xf2\x61\x0b\x82\x90\x2b\xda\x42\x77\x47\xe2\x6a\x36\xca\x92\xb9\xbc\x87\x11\xd9\xa3\xd6\x6b\x62\x46\x72\xfa\x29\x1c\x95\x68\xd1\x1b\x7b\x61\x41\xd5\xaa\xbb\xe2\x75\xda\xf9\x0c\x16\x79\x4f\x70\xfd\x4a\xa7\x5b\xb8\xee\x81\xe0\x5b\x0a\xdb\x17\x3c\x99\xca\x3f\xa3\xc7\xed\x30\xe5\x8b\x72\xbe\xdd\xa1\xa6\x59\xb5\x3a\x33\x4c\xa4\x18\x3b\x8f\xcf\xe7\xb1\xf8\xf6\xc7\x33\x34\x8d\x58\xa6\x74\xbd\xa8\x22\x44\x3d\xe6\x5e\xd5\xb4\xc4\x7a\xe7\xec\x3c\xbd\xf9\xc8\x55\x79\x4e\xce\x89\xec\xe6\xea\xee\xf3\xfd\xfd\xd7\xbb\x87\xe5\xa9\x4e\x50\x48\xbb\xbf\x2e\x2c\x5b\x76\x6c\xa8\xfb\xe5\x8f\x75\x59\xbe\x57\xf6\x86\x77\xae\x7c\x58\x12\xb0\x64\x6c\xbe\x25\xad\xe1\x1d\xad\x56\x08\x49\x5c\xe9\xc9\x85\x4c\x72\x2e\x9e\xfe\x01\xe9\x9e\x8e\x78\xbb\xb8\xe6\xe1\x3d\x98\x85\x84\x9f\x85\xa8\xd0\x95\x92\x5d\x48\x12\x33\xd6\xd9\xe6\xd2\xc2\xef\x00\x00\x00\xff\xff\xfc\xf5\x56\x00\x84\x06\x00\x00")

func serverTemplatesNavbarHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesNavbarHtml,
		"server/templates/navbar.html",
	)
}

func serverTemplatesNavbarHtml() (*asset, error) {
	bytes, err := serverTemplatesNavbarHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/navbar.html", size: 1668, mode: os.FileMode(420), modTime: time.Unix(1501412786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"server/templates/cameras/index.html": serverTemplatesCamerasIndexHtml,
	"server/templates/cameras/show.html": serverTemplatesCamerasShowHtml,
	"server/templates/index.html": serverTemplatesIndexHtml,
	"server/templates/layout.html": serverTemplatesLayoutHtml,
	"server/templates/navbar.html": serverTemplatesNavbarHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"server": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"cameras": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{serverTemplatesCamerasIndexHtml, map[string]*bintree{}},
				"show.html": &bintree{serverTemplatesCamerasShowHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{serverTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{serverTemplatesLayoutHtml, map[string]*bintree{}},
			"navbar.html": &bintree{serverTemplatesNavbarHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

